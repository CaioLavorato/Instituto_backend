name: Django CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests

    - name: Run tests
      run: |
        python manage.py test

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Debug SSH Connection
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@89.117.32.80 'echo SSH connection successful'

    - name: Deploy to the server
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@89.117.32.80 '
        set -e
        echo "Starting deployment"
        cd /var/www/Instituto_backend
        echo "Configuring Git safe directory..."
        git config --global --add safe.directory /var/www/Instituto_backend
        echo "Checking for uncommitted changes..."
        if [ -n "$(git status --porcelain)" ]; then
          echo "Uncommitted changes detected, discarding them..."
          git reset --hard
          git clean -fd
        fi
        echo "Backing up SQLite database..."
        cp db.sqlite3 db.sqlite3.backup
        echo "Updating repository..."
        git pull origin master
        echo "Current directory contents:"
        ls -la
        echo "Creating and activating virtual environment..."
        python3 -m venv venv
        source venv/bin/activate
        echo "Installing dependencies..."
        pip install -r requirements.txt
        pip install requests
        echo "Running migrations..."
        python manage.py migrate
        echo "Collecting static files..."
        python manage.py collectstatic --noinput
        echo "Adjusting static files permissions..."
        sudo chown -R www-data:www-data /var/www/Instituto_backend/staticfiles
        sudo chmod -R 755 /var/www/Instituto_backend/staticfiles
        echo "Restarting Gunicorn..."
        sudo systemctl restart gunicorn
        echo "Checking Gunicorn status..."
        sudo systemctl status gunicorn
        echo "Restarting Nginx..."
        sudo systemctl restart nginx
        echo "Checking Nginx status..."
        sudo systemctl status nginx
        echo "Checking Nginx configuration..."
        sudo nginx -t
        echo "Checking Nginx error logs..."
        sudo tail -n 50 /var/log/nginx/error.log
        echo "Checking Gunicorn error logs..."
        sudo tail -n 50 /var/log/gunicorn/error.log
        echo "Checking Django application..."
        python manage.py check --deploy
        echo "Deployment and checks completed"
        '

    - name: Verify Deployment
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@89.117.32.80 '
        echo "Checking Nginx status..."
        sudo systemctl status nginx
        echo "Checking Gunicorn status..."
        sudo systemctl status gunicorn
        echo "Checking application response..."
        curl -I http://localhost
        '

    - name: Check Static Files after Deployment
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@89.117.32.80 '
        echo "Verifying static files presence..."
        ls -la /var/www/Instituto_backend/staticfiles
        echo "Checking Nginx logs for static file errors..."
        tail -n 50 /var/log/nginx/error.log
        '