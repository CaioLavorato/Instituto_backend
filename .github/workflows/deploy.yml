name: Django CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: 3.12
    
    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
    
    - name: Install dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
    
    - name: Run migrations and tests
      run: |
        source venv/bin/activate
        python manage.py migrate
        python manage.py test
    
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    
    - name: Deploy to the server
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@89.117.32.80 '
        echo "Starting deployment" &&
        cd /var/www/Instituto_backend &&
        
        # Git configuration and updates
        git config --global --add safe.directory /var/www/Instituto_backend &&
        git reset --hard &&
        git clean -fd &&
        git pull origin master &&
        
        # Setup virtual environment
        python3 -m venv venv &&
        source venv/bin/activate &&
        pip install -r requirements.txt &&
        
        # Django commands
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        
        # Fix permissions
        sudo chown -R www-data:www-data /var/www/Instituto_backend &&
        sudo chmod -R 755 /var/www/Instituto_backend &&
        
        # Ensure static directories exist
        mkdir -p /var/www/Instituto_backend/static/rest_framework/js &&
        mkdir -p /var/www/Instituto_backend/static/admin &&
        
        # Copy static files
        cp -r staticfiles/* static/ &&
        
        # Restart services
        sudo systemctl restart gunicorn &&
        sudo systemctl restart nginx &&

        
        # Verify services
        echo "Checking Gunicorn status:" &&
        sudo systemctl status gunicorn &&
        echo "Checking Nginx status:" &&
        sudo systemctl status nginx &&
        
        # Check logs
        echo "Recent Nginx error logs:" &&
        tail -n 20 /var/log/nginx/error.log'

